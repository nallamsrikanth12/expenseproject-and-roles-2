- name: configure the backend server
  hosts: backend
  become: yes
  vars:

  tasks:
  - name: disble the nodesjs
    ansible.builtin.command: " dnf module disable nodejs -y"


  - name: enable the nodejs 20
    ansible.builtin.command: " dnf module enable nodejs:20 -y "
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: latest

  - name: create a user
    ansible.builtin.user:
      name: expense


  - name: create a app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download code and unzip the code
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app
      remote_src: yes
  
  - name: change app directory
    ansible.builtin.command: " npm install "
    args:
      chdir: /app

  - name: copy the backendserive
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install mysql
    ansible.builtin.dnf:
      name: mysql
      state: latest

  - name: import the data
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: db.srikantheswar.online
      login_password: ExpenseApp@1
      login_user: root
      target: /app/schema/backend.sql




  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true



  - name: restart the service
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes


      

  